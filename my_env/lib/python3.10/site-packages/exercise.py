import numpy as np

# a = np.array([1, 2, 3])

# print(a)
#numpy complex
#A = np.array([[1, 2, 3], [3, 4, 5]], dtype = complex) # Array of complex numbers

#print(A)
#numpy zeros
# zeros_array = np.zeros( (2, 3) )

# print(zeros_array)

#numpy arange and shape
# A = np.arange(4)
# print('A =', A)
#shape (basically meaning splitting into two)
# B = np.arange(10).reshape(2, 5)

# print('B =', B)

#adding of two matrices
# A = np.array([[2, 4], [5, -6]])

# B = np.array([[9, -3], [3, 6]])

# C = A + B
# print(C)

#multiplication of matrices
# A = np.array([[3, 6, 7], [5, -3, 0]])

# B = np.array([[1, 1], [2, 1], [3, -3]])

# C = A.dot(B)
# print(C)
#printing out the first row 
# A = np.array([[1, 1],
#               [2, 1],
#               [3, -3]])

# print(A.transpose())

#slicing(prints the second index and the rest)
#letters = np.array([1, 3, 5, 7, 9, 7, 5])
#print(letters[2:]) 

#slicing(prints all and omits the fifth index and next index)
#print(letters[:5])

#printing all elements
#print(letters[:])

# reversing a list
#print(letters[::-1])

#slicing matrices
A = np.array([[1, 4, 5, 12, 14],

 [-5, 8, 9, 0, 17],

[-6, 7, 11, 19, 21]])

#first is for row, second for column
#print(A[:2, :3])

#first row all columns
#print(A[0:1,0:])

#all row second column
print(A[:,3 ])